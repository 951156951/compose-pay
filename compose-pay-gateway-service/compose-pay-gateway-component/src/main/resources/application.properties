spring.profiles.active=rd


#cache
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=60s
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=ComposePayGateway:

#dubbo
dubbo.provider.version=1.0.0
dubbo.consumer.version=1.0.0
dubbo.consumer.check=false


spring.shardingsphere.sharding.tables.t_mer_pay.actual-data-nodes=ds.t_mer_pay$->{1..8}
#分片字段
spring.shardingsphere.sharding.tables.t_mer_pay.table-strategy.inline.sharding-column=pay_id
#spring.shardingsphere.sharding.tables.t_mer_pay.table-strategy.standard.sharding-column=pay_id
spring.shardingsphere.sharding.tables.t_mer_pay.table-strategy.inline.algorithm-expression=t_mer_pay$->{pay_id % 8 + 1}
#spring.shardingsphere.sharding.tables.t_mer_pay.table-strategy.standard.precise-algorithm-class-name=MyPreciseShardingAlgorithm
spring.shardingsphere.sharding.tables.t_mer_pay.key-generator.column=pay_id
#默认分布式id生成策略
spring.shardingsphere.sharding.tables.t_mer_pay.key-generator.type=SNOWFLAKE

#未配置分片规则的表将通过默认数据源定位
sharding.jdbc.config.sharding.default-data-source-name=ds

spring.shardingsphere.props.sql.show=true